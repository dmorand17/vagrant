# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "gusztavvargadr/windows-10"
  config.vm.guest = :windows

  #This is required to run chef in the guess vm
  config.vm.communicator = :winrm

  #This enable the rdp and remote shell
  config.vm.network :forwarded_port, guest: 3389, host: 3389, id: 'rdp', auto_correct: true
  config.vm.network :forwarded_port, guest: 5985, host: 5985, id: 'winrm', auto_correct: true

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 3000, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  #
  config.vm.synced_folder ".", "/vagrant"
  config.vm.synced_folder "../vagrant-share", "/vagrant-share"
  #config.vm.synced_folder ".", "/vagrant", disabled: true # Disable the default sync
  #config.vm.synced_folder ".", "/dougie"

  config.vm.network "private_network", ip: "33.33.33.10"

  config.vm.provision :shell, path: "shell/main.cmd" # Install Chocolatey
  #config.vm.provision :shell, inline: "choco install vscode --yes"   # Run the inline script to install VSCode via Chocolatey
  config.vm.provision :shell, path: "shell/InstallBoxStarter.bat" # Install BoxStarter after chocolatey

  config.vm.provision "file",
    source: "shell/RunBoxStarterGist.bat",
    destination: "\\RunBoxStarterGist.bat"

  # Copy the RunBoxStarterGist.bat file to the desktop
  config.vm.provision "file",
    source: "shell/RunBoxStarterGist.bat",
    destination: "c:\\users\\vagrant\\desktop\\RunBoxStarterGist.bat"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # Available settings https://www.virtualbox.org/manual/ch08.html#vboxmanage-modifyvm-general
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true

    # Set a name for the VirtualBox machine
    vb.name = "windows_development"

    # Customize the amount of memory on the VM:
    vb.memory = 16384 # 16 GB

    # Customize the number of CPUs on the VM:
    vb.cpus = 8

    # Customize the graphics controller used for driving video on the Guest machine
    vb.customize ["modifyvm", :id, "--graphicscontroller", "vboxsvga"]

    # Customize the amount of RAM available for the virtual graphic card
    vb.customize ["modifyvm", :id, "--vram", "128"]

    # clipboard
    vb.customize ['modifyvm', :id, '--clipboard', 'bidirectional'] 

    # drag and drop
    vb.customize ["modifyvm", :id, "--draganddrop", "bidirectional"] # Enables drag-and-drop between host and guest

    # Set GUI Scale factor to 200%
    vb.customize ['setextradata', :id, 'GUI/ScaleFactor', '2']
  end

  # config.vm.provision :reload

  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
